# coding: utf-8

"""
    Hosted Payment Controls API Documentation v1.5

    The API for Hosted Payment Controls. To access the swagger.json file open the following link: https://hpc.uat.freedompay.com/api/swagger/docs/v1.5  # noqa: E501

    The version of the OpenAPI document: v1.5
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from freedompay-client import schemas  # noqa: F401


class PayPalInitRequest(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            Commit = schemas.BoolSchema
            Disabled = schemas.BoolSchema
            DisableFunding = schemas.StrSchema
            
            
            class Intent(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def UNKNOWN(cls):
                    return cls("Unknown")
                
                @schemas.classproperty
                def AUTHORIZE(cls):
                    return cls("AUTHORIZE")
                
                @schemas.classproperty
                def CAPTURE(cls):
                    return cls("CAPTURE")
            InvoiceNumber = schemas.StrSchema
            
            
            class PaymentMethodPayeePreferred(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def UNKNOWN(cls):
                    return cls("Unknown")
                
                @schemas.classproperty
                def UNRESTRICTED(cls):
                    return cls("UNRESTRICTED")
                
                @schemas.classproperty
                def IMMEDIATE_PAYMENT_REQUIRED(cls):
                    return cls("IMMEDIATE_PAYMENT_REQUIRED")
            
            
            class ShippingPreference(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def UNKNOWN(cls):
                    return cls("Unknown")
                
                @schemas.classproperty
                def GET_FROM_FILE(cls):
                    return cls("GET_FROM_FILE")
                
                @schemas.classproperty
                def NO_SHIPPING(cls):
                    return cls("NO_SHIPPING")
            TotalPrice = schemas.StrSchema
            CountryCode = schemas.StrSchema
            CurrencyCode = schemas.StrSchema
            Debug = schemas.BoolSchema
            Locale = schemas.StrSchema
            CultureCode = schemas.StrSchema
            EsKey = schemas.StrSchema
        
            @staticmethod
            def Legal() -> typing.Type['LegalControl']:
                return LegalControl
            StoreId = schemas.StrSchema
            Styles = schemas.StrSchema
            TerminalId = schemas.StrSchema
            
            
            class ValidationMessageType(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def UNKNOWN(cls):
                    return cls("Unknown")
                
                @schemas.classproperty
                def NONE(cls):
                    return cls("None")
                
                @schemas.classproperty
                def FEEDBACK(cls):
                    return cls("Feedback")
                
                @schemas.classproperty
                def TOOLTIP(cls):
                    return cls("Tooltip")
            ReferenceId = schemas.UUIDSchema
            __annotations__ = {
                "Commit": Commit,
                "Disabled": Disabled,
                "DisableFunding": DisableFunding,
                "Intent": Intent,
                "InvoiceNumber": InvoiceNumber,
                "PaymentMethodPayeePreferred": PaymentMethodPayeePreferred,
                "ShippingPreference": ShippingPreference,
                "TotalPrice": TotalPrice,
                "CountryCode": CountryCode,
                "CurrencyCode": CurrencyCode,
                "Debug": Debug,
                "Locale": Locale,
                "CultureCode": CultureCode,
                "EsKey": EsKey,
                "Legal": Legal,
                "StoreId": StoreId,
                "Styles": Styles,
                "TerminalId": TerminalId,
                "ValidationMessageType": ValidationMessageType,
                "ReferenceId": ReferenceId,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Commit"]) -> MetaOapg.properties.Commit: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Disabled"]) -> MetaOapg.properties.Disabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["DisableFunding"]) -> MetaOapg.properties.DisableFunding: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Intent"]) -> MetaOapg.properties.Intent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["InvoiceNumber"]) -> MetaOapg.properties.InvoiceNumber: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PaymentMethodPayeePreferred"]) -> MetaOapg.properties.PaymentMethodPayeePreferred: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ShippingPreference"]) -> MetaOapg.properties.ShippingPreference: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["TotalPrice"]) -> MetaOapg.properties.TotalPrice: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CountryCode"]) -> MetaOapg.properties.CountryCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CurrencyCode"]) -> MetaOapg.properties.CurrencyCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Debug"]) -> MetaOapg.properties.Debug: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Locale"]) -> MetaOapg.properties.Locale: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CultureCode"]) -> MetaOapg.properties.CultureCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["EsKey"]) -> MetaOapg.properties.EsKey: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Legal"]) -> 'LegalControl': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["StoreId"]) -> MetaOapg.properties.StoreId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Styles"]) -> MetaOapg.properties.Styles: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["TerminalId"]) -> MetaOapg.properties.TerminalId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ValidationMessageType"]) -> MetaOapg.properties.ValidationMessageType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ReferenceId"]) -> MetaOapg.properties.ReferenceId: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["Commit", "Disabled", "DisableFunding", "Intent", "InvoiceNumber", "PaymentMethodPayeePreferred", "ShippingPreference", "TotalPrice", "CountryCode", "CurrencyCode", "Debug", "Locale", "CultureCode", "EsKey", "Legal", "StoreId", "Styles", "TerminalId", "ValidationMessageType", "ReferenceId", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Commit"]) -> typing.Union[MetaOapg.properties.Commit, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Disabled"]) -> typing.Union[MetaOapg.properties.Disabled, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["DisableFunding"]) -> typing.Union[MetaOapg.properties.DisableFunding, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Intent"]) -> typing.Union[MetaOapg.properties.Intent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["InvoiceNumber"]) -> typing.Union[MetaOapg.properties.InvoiceNumber, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PaymentMethodPayeePreferred"]) -> typing.Union[MetaOapg.properties.PaymentMethodPayeePreferred, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ShippingPreference"]) -> typing.Union[MetaOapg.properties.ShippingPreference, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["TotalPrice"]) -> typing.Union[MetaOapg.properties.TotalPrice, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CountryCode"]) -> typing.Union[MetaOapg.properties.CountryCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CurrencyCode"]) -> typing.Union[MetaOapg.properties.CurrencyCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Debug"]) -> typing.Union[MetaOapg.properties.Debug, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Locale"]) -> typing.Union[MetaOapg.properties.Locale, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CultureCode"]) -> typing.Union[MetaOapg.properties.CultureCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["EsKey"]) -> typing.Union[MetaOapg.properties.EsKey, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Legal"]) -> typing.Union['LegalControl', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["StoreId"]) -> typing.Union[MetaOapg.properties.StoreId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Styles"]) -> typing.Union[MetaOapg.properties.Styles, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["TerminalId"]) -> typing.Union[MetaOapg.properties.TerminalId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ValidationMessageType"]) -> typing.Union[MetaOapg.properties.ValidationMessageType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ReferenceId"]) -> typing.Union[MetaOapg.properties.ReferenceId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["Commit", "Disabled", "DisableFunding", "Intent", "InvoiceNumber", "PaymentMethodPayeePreferred", "ShippingPreference", "TotalPrice", "CountryCode", "CurrencyCode", "Debug", "Locale", "CultureCode", "EsKey", "Legal", "StoreId", "Styles", "TerminalId", "ValidationMessageType", "ReferenceId", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        Commit: typing.Union[MetaOapg.properties.Commit, bool, schemas.Unset] = schemas.unset,
        Disabled: typing.Union[MetaOapg.properties.Disabled, bool, schemas.Unset] = schemas.unset,
        DisableFunding: typing.Union[MetaOapg.properties.DisableFunding, str, schemas.Unset] = schemas.unset,
        Intent: typing.Union[MetaOapg.properties.Intent, str, schemas.Unset] = schemas.unset,
        InvoiceNumber: typing.Union[MetaOapg.properties.InvoiceNumber, str, schemas.Unset] = schemas.unset,
        PaymentMethodPayeePreferred: typing.Union[MetaOapg.properties.PaymentMethodPayeePreferred, str, schemas.Unset] = schemas.unset,
        ShippingPreference: typing.Union[MetaOapg.properties.ShippingPreference, str, schemas.Unset] = schemas.unset,
        TotalPrice: typing.Union[MetaOapg.properties.TotalPrice, str, schemas.Unset] = schemas.unset,
        CountryCode: typing.Union[MetaOapg.properties.CountryCode, str, schemas.Unset] = schemas.unset,
        CurrencyCode: typing.Union[MetaOapg.properties.CurrencyCode, str, schemas.Unset] = schemas.unset,
        Debug: typing.Union[MetaOapg.properties.Debug, bool, schemas.Unset] = schemas.unset,
        Locale: typing.Union[MetaOapg.properties.Locale, str, schemas.Unset] = schemas.unset,
        CultureCode: typing.Union[MetaOapg.properties.CultureCode, str, schemas.Unset] = schemas.unset,
        EsKey: typing.Union[MetaOapg.properties.EsKey, str, schemas.Unset] = schemas.unset,
        Legal: typing.Union['LegalControl', schemas.Unset] = schemas.unset,
        StoreId: typing.Union[MetaOapg.properties.StoreId, str, schemas.Unset] = schemas.unset,
        Styles: typing.Union[MetaOapg.properties.Styles, str, schemas.Unset] = schemas.unset,
        TerminalId: typing.Union[MetaOapg.properties.TerminalId, str, schemas.Unset] = schemas.unset,
        ValidationMessageType: typing.Union[MetaOapg.properties.ValidationMessageType, str, schemas.Unset] = schemas.unset,
        ReferenceId: typing.Union[MetaOapg.properties.ReferenceId, str, uuid.UUID, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PayPalInitRequest':
        return super().__new__(
            cls,
            *args,
            Commit=Commit,
            Disabled=Disabled,
            DisableFunding=DisableFunding,
            Intent=Intent,
            InvoiceNumber=InvoiceNumber,
            PaymentMethodPayeePreferred=PaymentMethodPayeePreferred,
            ShippingPreference=ShippingPreference,
            TotalPrice=TotalPrice,
            CountryCode=CountryCode,
            CurrencyCode=CurrencyCode,
            Debug=Debug,
            Locale=Locale,
            CultureCode=CultureCode,
            EsKey=EsKey,
            Legal=Legal,
            StoreId=StoreId,
            Styles=Styles,
            TerminalId=TerminalId,
            ValidationMessageType=ValidationMessageType,
            ReferenceId=ReferenceId,
            _configuration=_configuration,
            **kwargs,
        )

from freedompay-client.model.legal_control import LegalControl
