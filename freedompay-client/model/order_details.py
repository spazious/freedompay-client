# coding: utf-8

"""
    Hosted Payment Controls API Documentation v1.5

    The API for Hosted Payment Controls. To access the swagger.json file open the following link: https://hpc.uat.freedompay.com/api/swagger/docs/v1.5  # noqa: E501

    The version of the OpenAPI document: v1.5
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from freedompay-client import schemas  # noqa: F401


class OrderDetails(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            TransactionTotal = schemas.Float64Schema
            CurrencyCode = schemas.StrSchema
            OrderNumber = schemas.StrSchema
            OrderDescription = schemas.StrSchema
            __annotations__ = {
                "TransactionTotal": TransactionTotal,
                "CurrencyCode": CurrencyCode,
                "OrderNumber": OrderNumber,
                "OrderDescription": OrderDescription,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["TransactionTotal"]) -> MetaOapg.properties.TransactionTotal: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CurrencyCode"]) -> MetaOapg.properties.CurrencyCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["OrderNumber"]) -> MetaOapg.properties.OrderNumber: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["OrderDescription"]) -> MetaOapg.properties.OrderDescription: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["TransactionTotal", "CurrencyCode", "OrderNumber", "OrderDescription", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["TransactionTotal"]) -> typing.Union[MetaOapg.properties.TransactionTotal, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CurrencyCode"]) -> typing.Union[MetaOapg.properties.CurrencyCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["OrderNumber"]) -> typing.Union[MetaOapg.properties.OrderNumber, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["OrderDescription"]) -> typing.Union[MetaOapg.properties.OrderDescription, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["TransactionTotal", "CurrencyCode", "OrderNumber", "OrderDescription", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        TransactionTotal: typing.Union[MetaOapg.properties.TransactionTotal, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        CurrencyCode: typing.Union[MetaOapg.properties.CurrencyCode, str, schemas.Unset] = schemas.unset,
        OrderNumber: typing.Union[MetaOapg.properties.OrderNumber, str, schemas.Unset] = schemas.unset,
        OrderDescription: typing.Union[MetaOapg.properties.OrderDescription, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'OrderDetails':
        return super().__new__(
            cls,
            *args,
            TransactionTotal=TransactionTotal,
            CurrencyCode=CurrencyCode,
            OrderNumber=OrderNumber,
            OrderDescription=OrderDescription,
            _configuration=_configuration,
            **kwargs,
        )
