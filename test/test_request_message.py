# coding: utf-8

"""
    Hosted Payment Controls API Documentation v1.5

    The API for Hosted Payment Controls. To access the swagger.json file open the following link: https://hpc.uat.freedompay.com/api/swagger/docs/v1.5

    The version of the OpenAPI document: v1.5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from freedompay_client.models.request_message import RequestMessage  # noqa: E501

class TestRequestMessage(unittest.TestCase):
    """RequestMessage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RequestMessage:
        """Test RequestMessage
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RequestMessage`
        """
        model = RequestMessage()  # noqa: E501
        if include_optional:
            return RequestMessage(
                client_id = '',
                store_id = '',
                terminal_id = '',
                es_key = '',
                admin_service = freedompay_client.models.admin_service.AdminService(
                    service_type = '', 
                    term_caps = '', 
                    run = '', ),
                auto_rental_data = freedompay_client.models.auto_rental_data.AutoRentalData(
                    expected_duration = '', 
                    agreement_number = '', 
                    checkout_date = '', 
                    checkin_date = '', 
                    rental_rate = '', 
                    rental_rate_unit = '', 
                    rental_class_id = '', 
                    no_show = '', 
                    renter_name = '', 
                    return_location_id = '', 
                    return_city = '', 
                    return_state = '', 
                    return_country = '', 
                    extra_charge_types = '', 
                    extra_charge_total = '', 
                    extra_charge_notified = '', ),
                healthcare_data = freedompay_client.models.healthcare_data_web.HealthcareDataWeb(
                    total_amount = '', 
                    rx = '', 
                    vision = '', 
                    clinic = '', 
                    dental = '', ),
                bill_to = freedompay_client.models.bill_to.BillTo(
                    ip_address = '', 
                    customer_id = '', 
                    date_of_birth = '', 
                    drivers_license_number = '', 
                    drivers_license_state = '', 
                    company = '', 
                    title = '', 
                    first_name = '', 
                    middle_name = '', 
                    last_name = '', 
                    suffix = '', 
                    street1 = '', 
                    street2 = '', 
                    street3 = '', 
                    street4 = '', 
                    city = '', 
                    state = '', 
                    postal_code = '', 
                    country = '', 
                    phone_number = '', 
                    fax_number = '', 
                    email = '', 
                    ssn = '', ),
                card = freedompay_client.models.card.Card(
                    account_number = '', 
                    account_type = '', 
                    card_type = '', 
                    token_subtype = '', 
                    subtype = '', 
                    issuer = '', 
                    cv_indicator = '', 
                    cv_number = '', 
                    expiration_month = '', 
                    expiration_year = '', 
                    issue_number = '', 
                    name_on_card = '', 
                    start_month = '', 
                    start_year = '', 
                    service_restriction_code = '', 
                    pin_ksn = '', 
                    pin_block = '', 
                    voucher_number = '', 
                    expected_brand = '', 
                    pl_data1 = '', 
                    pl_data2 = '', 
                    pass = '', ),
                cc_auth_service = freedompay_client.models.cc_auth_service.CCAuthService(
                    trans_type = '', 
                    cof_indicator = '', 
                    cof_compliance_data = '', 
                    allow_partial = '', 
                    return_balance = '', 
                    auth_type = '', 
                    verbal_auth_code = '', 
                    ecom3ds = '', 
                    cavv = '', 
                    xid = '', 
                    orig_auth_amount = '', 
                    enable_avs = '', 
                    offline = '', 
                    offline_code = '', 
                    estimated = '', 
                    installment_number = '', 
                    installment_count = '', 
                    auth3dsformat = '', 
                    auth3dsjson = '', 
                    sca_exemptions = '', 
                    sca_upgrade = '', 
                    request_par = '', 
                    bill_payment = '', 
                    recurring = '', 
                    commerce_indicator = '', 
                    partial_payment_id = '', 
                    last_payment_flag = '', 
                    industry_datatype = '', 
                    run = '', ),
                cc_capture_service = freedompay_client.models.cc_capture_service.CCCaptureService(
                    purchasing_level = '', 
                    is_split_transaction = '', 
                    use_merchant_creds = '', 
                    business_date = '', 
                    partial_payment_id = '', 
                    last_payment_flag = '', 
                    industry_datatype = '', 
                    run = '', ),
                cc_credit_service = freedompay_client.models.cc_credit_service.CCCreditService(
                    trans_type = '', 
                    offline = '', 
                    offline_code = '', 
                    return_balance = '', 
                    business_date = '', 
                    bill_payment = '', 
                    recurring = '', 
                    commerce_indicator = '', 
                    partial_payment_id = '', 
                    last_payment_flag = '', 
                    industry_datatype = '', 
                    run = '', ),
                cc_followup_service = freedompay_client.models.cc_followup_service.CCFollowupService(
                    run = '', ),
                dcc_service = freedompay_client.models.dcc_service.DccService(
                    bin = '', 
                    amount = '', 
                    run = '', ),
                dcc = freedompay_client.models.dcc_info.DccInfo(
                    enabled = '', 
                    exchange_rate = '', 
                    foreign_amount = '', 
                    foreign_currency = '', 
                    host_data = '', ),
                check = freedompay_client.models.check.Check(
                    bank_transit_number = '', 
                    account_number = '', 
                    account_type = '', 
                    check_number = '', 
                    ach_accepted = '', 
                    check_type = '', 
                    full_micr = '', 
                    reader_status = '', ),
                clerk_id = '',
                client_metadata = freedompay_client.models.client_metadata.ClientMetadata(
                    application_name = '', 
                    application_version = '', 
                    workstation_id = '', 
                    application_user = '', 
                    environment = '', 
                    library = '', 
                    library_version = '', 
                    security_library = '', 
                    security_library_version = '', 
                    test_run = '', 
                    test_case = '', 
                    poi_device_identifier = '', 
                    selling_system_name = '', 
                    selling_system_version = '', 
                    selling_middleware_name = '', 
                    selling_middleware_version = '', ),
                comments = '',
                discount_service = freedompay_client.models.discount_service.DiscountService(
                    scenario_code = '', 
                    options = '', 
                    run = '', ),
                efv_options = freedompay_client.models.efv_options.EfvOptions(
                    options = '', 
                    force = '', 
                    force_code = '', 
                    force_message = '', ),
                fleet_data = freedompay_client.models.fleet_data.FleetData(
                    user_id = '', 
                    vehicle_id = '', 
                    vehicle_tag = '', 
                    driver_id = '', 
                    odo = '', 
                    dl_num = '', 
                    dl_state = '', 
                    dl_name = '', 
                    po_number = '', 
                    invoice_num = '', 
                    trip_num = '', 
                    unit_num = '', 
                    trailer_hours = '', 
                    dob = '', 
                    zip = '', 
                    misc1 = '', 
                    misc2 = '', 
                    cash_back = '', 
                    job_num = '', 
                    maint_id = '', 
                    dept = '', 
                    vin = '', 
                    tractor_num = '', 
                    hubo = '', 
                    trailer_num = '', 
                    custom1 = '', 
                    custom2 = '', ),
                fraud_check_service = freedompay_client.models.fraud_check_service.FraudCheckService(
                    reference_id = '', 
                    option = '', 
                    mode = '', 
                    device_identifier = '', 
                    commerce_indicator = '', 
                    site_identifier = '', 
                    customer_since_date = '', 
                    estimated_total_amount = '', 
                    properties = [
                        freedompay_client.models.user_defined_field.UserDefinedField(
                            name = '', 
                            value = '', )
                        ], 
                    run_risk_model = '', 
                    order = '', 
                    void_threshold = '', 
                    auth_data = '', 
                    captcha_data = '', 
                    fail_count = '', 
                    failed_requests = [
                        ''
                        ], 
                    run = '', ),
                inquiry_service = freedompay_client.models.inquiry_service.InquiryService(
                    verify_mode = '', 
                    fields = '', 
                    authorized_user = '', 
                    run = '', ),
                hotel_data = freedompay_client.models.hotel_data.HotelData(
                    room_occupant_count = '', 
                    room_type = '', 
                    notes = '', 
                    properties = [
                        freedompay_client.models.user_defined_field.UserDefinedField(
                            name = '', 
                            value = '', )
                        ], 
                    expected_duration = '', 
                    folio_number = '', 
                    no_show = '', 
                    program_code = '', 
                    checkin_date = '', 
                    checkout_date = '', 
                    extra_charge_types = '', 
                    room_rate = '', 
                    room_rate_unit = '', 
                    room_tax = '', 
                    extra_charge_total = '', 
                    renter_name = '', ),
                invoice_discount_detail = [
                    freedompay_client.models.eid_detail.EIDDetail(
                        discount_key = '', 
                        code = '', 
                        qty = '', 
                        offset = '', 
                        total_amount = '', )
                    ],
                invoice_service = freedompay_client.models.invoice_service.InvoiceService(
                    trans_type = '', 
                    run = '', ),
                invoice_header = freedompay_client.models.invoice_header.InvoiceHeader(
                    invoice_number = '', 
                    invoice_date = '', 
                    merchant_descriptor = '', 
                    merchant_descriptor_contact = '', 
                    merchant_descriptor_url = '', 
                    purchaser_code = '', 
                    purchaser_order_date = '', 
                    goods_indicator = '', 
                    customer_po = '', 
                    product_code_standard = '', 
                    eid_indicator = '', ),
                items = [
                    freedompay_client.models.item.Item(
                        discount_amount = '', 
                        discount_flag = '', 
                        tax_included_flag = '', 
                        product_code = '', 
                        product_upc = '', 
                        product_sku = '', 
                        product_name = '', 
                        product_description = '', 
                        product_make = '', 
                        product_model = '', 
                        product_part_number = '', 
                        commodity_code = '', 
                        product_year = '', 
                        product_serial1 = '', 
                        product_serial2 = '', 
                        product_serial3 = '', 
                        customer_asset_id = '', 
                        category = '', 
                        sub_category = '', 
                        unit_price = '', 
                        quantity = '', 
                        total_amount = '', 
                        tax_amount = '', 
                        promo_code = '', 
                        freight_amount = '', 
                        unit_of_measure = '', 
                        sale_code = '', 
                        custom_format_id = '', 
                        custom1 = '', 
                        custom2 = '', 
                        custom3 = '', 
                        custom4 = '', 
                        custom5 = '', 
                        custom6 = '', 
                        custom7 = '', 
                        custom8 = '', 
                        custom9 = '', 
                        pay_alloc = '', 
                        alloc_code = '', 
                        eid_indicator = '', 
                        orig_unit_price = '', 
                        orig_total_amount = '', 
                        eid_detail = [
                            freedompay_client.models.eid_detail.EIDDetail(
                                discount_key = '', 
                                code = '', 
                                qty = '', 
                                offset = '', 
                                total_amount = '', )
                            ], 
                        tax_detail = [
                            freedompay_client.models.tax_detail_item.TaxDetailItem(
                                type = '', 
                                amount = '', )
                            ], 
                        id = '', 
                        tag = '', )
                    ],
                payments = [
                    freedompay_client.models.payment.Payment(
                        trans_type = '', 
                        pos_tender_type = freedompay_client.models.tender_type.TenderType(
                            description = '', 
                            id = '', ), 
                        brand = '', 
                        card_type = '', 
                        entry_mode = '', 
                        amount = '', 
                        currency_code = '', 
                        offline = '', 
                        request_id = '', )
                    ],
                language = '',
                loyalty_service = freedompay_client.models.loyalty_service.LoyaltyService(
                    card_type = '', 
                    card_number = '', 
                    app_id = '', 
                    id_block = '', 
                    id_ksn = '', 
                    run = '', ),
                request_incentives = freedompay_client.models.request_incentives.RequestIncentives(
                    system_id = '', 
                    incentives = [
                        freedompay_client.models.incentive_incentive.IncentiveIncentive(
                            id = '', 
                            presented = '', 
                            accepted = '', 
                            tender_request_id = '', )
                        ], ),
                merchant_defined_data = freedompay_client.models.merchant_defined_data.MerchantDefinedData(
                    format_id = '', 
                    field1 = '', 
                    field2 = '', 
                    field3 = '', 
                    field4 = '', 
                    field5 = '', 
                    field6 = '', 
                    field7 = '', 
                    field8 = '', 
                    field9 = '', 
                    field10 = '', 
                    field11 = '', 
                    field12 = '', 
                    field13 = '', 
                    field14 = '', 
                    field15 = '', 
                    field16 = '', 
                    field17 = '', 
                    field18 = '', 
                    field19 = '', 
                    field20 = '', ),
                magic_cookie = '',
                merchant_reference_code = '',
                merchant_batch_id = '',
                message_service = freedompay_client.models.message_service.MessageService(
                    run = '', ),
                mobile_service = freedompay_client.models.mobile_service.MobileService(
                    feature_flags1 = '', 
                    feature_flags2 = '', 
                    function_code = '', 
                    check_id = '', 
                    accept_tip = '', 
                    open_tab = '', 
                    payment_session_id = '', 
                    mha_callback_key = '', 
                    qrseq = '', 
                    bar_data = '', 
                    bar_type = '', 
                    confirm_pay_seq = '', 
                    pay_seq = '', 
                    applied_discount_amount = '', 
                    run = '', ),
                network_data = freedompay_client.models.network_data.NetworkData(
                    network = '', 
                    stan = '', 
                    aci = '', 
                    tdcc = '', 
                    pcode = '', 
                    vcode = '', 
                    downgrade_code = '', 
                    cvc_error = '', 
                    data_error = '', 
                    auth_source = '', 
                    response_code = '', 
                    product_id = '', 
                    program_id = '', 
                    merchant_advice = '', 
                    service_option = '', 
                    fleet_prompts = '', 
                    custom_data = [
                        freedompay_client.models.network_custom_data.NetworkCustomData(
                            data = [
                                ''
                                ], 
                            code = '', )
                        ], 
                    mac = '', 
                    pos_seq_num = '', 
                    mac_key = '', 
                    pin_key = '', 
                    field_key = '', 
                    trans_date = '', 
                    trans_time = '', 
                    host_control_data = '', ),
                offline_control = freedompay_client.models.offline_control.OfflineControl(
                    dtk = '', 
                    retry_count = '', 
                    internal_ffw = '', 
                    saf_request_id = '', 
                    saf_system_id = '', ),
                order_request_id = '',
                order_request_token = '',
                pos = freedompay_client.models.pos.Pos(
                    register_number = '', 
                    entry_mode = '', 
                    track1 = '', 
                    track2 = '', 
                    track3 = '', 
                    track_ksn = '', 
                    sequence_number = '', 
                    card_present = '', 
                    track1e = '', 
                    track2e = '', 
                    track1len = '', 
                    track2len = '', 
                    tracke = '', 
                    enc_mode = '', 
                    msr_type = '', 
                    payment_date = '', 
                    chip_data = '', 
                    issuer_script_results = '', 
                    caps = '', 
                    fallback_reason = '', 
                    sig_data = '', ),
                promo_service = freedompay_client.models.promo_service.PromoService(
                    options = '', 
                    action = '', 
                    scenario_code = '', 
                    program_code = '', 
                    quick_promo = '', 
                    force_code = '', 
                    force_message = '', 
                    validation_code = '', 
                    run = '', ),
                purchase_totals = freedompay_client.models.purchase_totals.PurchaseTotals(
                    tax_detail = [
                        freedompay_client.models.tax_detail_item.TaxDetailItem(
                            type = '', 
                            amount = '', )
                        ], 
                    currency = '', 
                    discount_total = '', 
                    duty_total = '', 
                    freight_total = '', 
                    tax_total = '', 
                    tip_amount = '', 
                    debit_surcharge = '', 
                    cash_back_amount = '', 
                    overtender = '', 
                    invoice_total = '', 
                    service_charge = '', 
                    eid_amount = '', 
                    charge_amount = '', ),
                restaurant_data = freedompay_client.models.restaurant_data.RestaurantData(
                    food_subtotal = '', 
                    beverage_subtotal = '', ),
                response_flags = '',
                session_key = '',
                session_service = freedompay_client.models.session_service.SessionService(
                    run = '', ),
                ship_from = freedompay_client.models.ship_from.ShipFrom(
                    company = '', 
                    title = '', 
                    first_name = '', 
                    middle_name = '', 
                    last_name = '', 
                    suffix = '', 
                    street1 = '', 
                    street2 = '', 
                    street3 = '', 
                    street4 = '', 
                    city = '', 
                    state = '', 
                    postal_code = '', 
                    country = '', 
                    phone_number = '', 
                    fax_number = '', 
                    email = '', 
                    ssn = '', ),
                ship_to = freedompay_client.models.ship_to.ShipTo(
                    company = '', 
                    title = '', 
                    first_name = '', 
                    middle_name = '', 
                    last_name = '', 
                    suffix = '', 
                    street1 = '', 
                    street2 = '', 
                    street3 = '', 
                    street4 = '', 
                    city = '', 
                    state = '', 
                    postal_code = '', 
                    country = '', 
                    phone_number = '', 
                    fax_number = '', 
                    email = '', 
                    ssn = '', 
                    date_of_birth = '', 
                    shipping_company = '', 
                    shipping_method = '', 
                    tracking_number = '', ),
                token_create_service = freedompay_client.models.token_create_service.TokenCreateService(
                    type = '', 
                    disable_verification = '', 
                    pos_data = '', 
                    dyn_exp = '', 
                    run = '', ),
                vend_control_service = freedompay_client.models.vend_control_service.VendControlService(
                    products = freedompay_client.models.vend_product_list.VendProductList(
                        product = [
                            freedompay_client.models.vend_product.VendProduct(
                                id = '', 
                                tag = '', 
                                product_code = '', 
                                unit_of_measure = '', 
                                unit_price = '', 
                                max_qty = '', 
                                options = '', 
                                price_code = '', )
                            ], 
                        options = '', ), ),
                void_service = freedompay_client.models.void_service.VoidService(
                    reason = '', 
                    offline = '', 
                    offline_code = '', 
                    run = '', ),
                tor_service = freedompay_client.models.tor_service.TORService(
                    run = '', ),
                eod_service = freedompay_client.models.eod_service.EodService(
                    level = '', 
                    group_code = '', 
                    run = '', ),
                incentive_service = freedompay_client.models.incentive_service.IncentiveService(
                    system_id = '', 
                    consumer_identifier_type = '', 
                    consumer_identifier = '', 
                    additional_data = '', 
                    additional_data_type = '', 
                    incentives = [
                        freedompay_client.models.incentive_incentive.IncentiveIncentive(
                            id = '', 
                            presented = '', 
                            accepted = '', 
                            tender_request_id = '', )
                        ], 
                    trans_type = '', 
                    run = '', ),
                member_data = freedompay_client.models.member_data.MemberData(
                    enrollment_date = '', 
                    is_new_member = '', 
                    member_identification = '', 
                    member_identification_type = '', 
                    id = '', 
                    street1 = '', 
                    street2 = '', 
                    city = '', 
                    state = '', 
                    country = '', 
                    postal_code = '', 
                    phone_number = '', 
                    level = '', 
                    status = '', 
                    additional_data = '', 
                    additional_data_type = '', 
                    properties = [
                        freedompay_client.models.user_defined_field.UserDefinedField(
                            name = '', 
                            value = '', )
                        ], )
            )
        else:
            return RequestMessage(
        )
        """

    def testRequestMessage(self):
        """Test RequestMessage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
