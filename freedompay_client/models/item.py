# coding: utf-8

"""
    Hosted Payment Controls API Documentation v1.5

    The API for Hosted Payment Controls. To access the swagger.json file open the following link: https://hpc.uat.freedompay.com/api/swagger/docs/v1.5  # noqa: E501

    OpenAPI spec version: v1.5
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from freedompay_client.configuration import Configuration


class Item(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'discount_amount': 'str',
        'discount_flag': 'str',
        'tax_included_flag': 'str',
        'product_code': 'str',
        'product_upc': 'str',
        'product_sku': 'str',
        'product_name': 'str',
        'product_description': 'str',
        'product_make': 'str',
        'product_model': 'str',
        'product_part_number': 'str',
        'commodity_code': 'str',
        'product_year': 'str',
        'product_serial1': 'str',
        'product_serial2': 'str',
        'product_serial3': 'str',
        'customer_asset_id': 'str',
        'category': 'str',
        'sub_category': 'str',
        'unit_price': 'str',
        'quantity': 'str',
        'total_amount': 'str',
        'tax_amount': 'str',
        'promo_code': 'str',
        'freight_amount': 'str',
        'unit_of_measure': 'str',
        'sale_code': 'str',
        'custom_format_id': 'str',
        'custom1': 'str',
        'custom2': 'str',
        'custom3': 'str',
        'custom4': 'str',
        'custom5': 'str',
        'custom6': 'str',
        'custom7': 'str',
        'custom8': 'str',
        'custom9': 'str',
        'pay_alloc': 'str',
        'alloc_code': 'str',
        'eid_indicator': 'str',
        'orig_unit_price': 'str',
        'orig_total_amount': 'str',
        'eid_detail': 'list[EIDDetail]',
        'tax_detail': 'list[TaxDetailItem]',
        'id': 'str',
        'tag': 'str'
    }

    attribute_map = {
        'discount_amount': 'discountAmount',
        'discount_flag': 'discountFlag',
        'tax_included_flag': 'taxIncludedFlag',
        'product_code': 'productCode',
        'product_upc': 'productUPC',
        'product_sku': 'productSKU',
        'product_name': 'productName',
        'product_description': 'productDescription',
        'product_make': 'productMake',
        'product_model': 'productModel',
        'product_part_number': 'productPartNumber',
        'commodity_code': 'commodityCode',
        'product_year': 'productYear',
        'product_serial1': 'productSerial1',
        'product_serial2': 'productSerial2',
        'product_serial3': 'productSerial3',
        'customer_asset_id': 'customerAssetId',
        'category': 'category',
        'sub_category': 'subCategory',
        'unit_price': 'unitPrice',
        'quantity': 'quantity',
        'total_amount': 'totalAmount',
        'tax_amount': 'taxAmount',
        'promo_code': 'promoCode',
        'freight_amount': 'freightAmount',
        'unit_of_measure': 'unitOfMeasure',
        'sale_code': 'saleCode',
        'custom_format_id': 'customFormatId',
        'custom1': 'custom1',
        'custom2': 'custom2',
        'custom3': 'custom3',
        'custom4': 'custom4',
        'custom5': 'custom5',
        'custom6': 'custom6',
        'custom7': 'custom7',
        'custom8': 'custom8',
        'custom9': 'custom9',
        'pay_alloc': 'payAlloc',
        'alloc_code': 'allocCode',
        'eid_indicator': 'eidIndicator',
        'orig_unit_price': 'origUnitPrice',
        'orig_total_amount': 'origTotalAmount',
        'eid_detail': 'eidDetail',
        'tax_detail': 'taxDetail',
        'id': 'id',
        'tag': 'tag'
    }

    def __init__(self, discount_amount=None, discount_flag=None, tax_included_flag=None, product_code=None, product_upc=None, product_sku=None, product_name=None, product_description=None, product_make=None, product_model=None, product_part_number=None, commodity_code=None, product_year=None, product_serial1=None, product_serial2=None, product_serial3=None, customer_asset_id=None, category=None, sub_category=None, unit_price=None, quantity=None, total_amount=None, tax_amount=None, promo_code=None, freight_amount=None, unit_of_measure=None, sale_code=None, custom_format_id=None, custom1=None, custom2=None, custom3=None, custom4=None, custom5=None, custom6=None, custom7=None, custom8=None, custom9=None, pay_alloc=None, alloc_code=None, eid_indicator=None, orig_unit_price=None, orig_total_amount=None, eid_detail=None, tax_detail=None, id=None, tag=None, _configuration=None):  # noqa: E501
        """Item - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._discount_amount = None
        self._discount_flag = None
        self._tax_included_flag = None
        self._product_code = None
        self._product_upc = None
        self._product_sku = None
        self._product_name = None
        self._product_description = None
        self._product_make = None
        self._product_model = None
        self._product_part_number = None
        self._commodity_code = None
        self._product_year = None
        self._product_serial1 = None
        self._product_serial2 = None
        self._product_serial3 = None
        self._customer_asset_id = None
        self._category = None
        self._sub_category = None
        self._unit_price = None
        self._quantity = None
        self._total_amount = None
        self._tax_amount = None
        self._promo_code = None
        self._freight_amount = None
        self._unit_of_measure = None
        self._sale_code = None
        self._custom_format_id = None
        self._custom1 = None
        self._custom2 = None
        self._custom3 = None
        self._custom4 = None
        self._custom5 = None
        self._custom6 = None
        self._custom7 = None
        self._custom8 = None
        self._custom9 = None
        self._pay_alloc = None
        self._alloc_code = None
        self._eid_indicator = None
        self._orig_unit_price = None
        self._orig_total_amount = None
        self._eid_detail = None
        self._tax_detail = None
        self._id = None
        self._tag = None
        self.discriminator = None

        if discount_amount is not None:
            self.discount_amount = discount_amount
        if discount_flag is not None:
            self.discount_flag = discount_flag
        if tax_included_flag is not None:
            self.tax_included_flag = tax_included_flag
        if product_code is not None:
            self.product_code = product_code
        if product_upc is not None:
            self.product_upc = product_upc
        if product_sku is not None:
            self.product_sku = product_sku
        if product_name is not None:
            self.product_name = product_name
        if product_description is not None:
            self.product_description = product_description
        if product_make is not None:
            self.product_make = product_make
        if product_model is not None:
            self.product_model = product_model
        if product_part_number is not None:
            self.product_part_number = product_part_number
        if commodity_code is not None:
            self.commodity_code = commodity_code
        if product_year is not None:
            self.product_year = product_year
        if product_serial1 is not None:
            self.product_serial1 = product_serial1
        if product_serial2 is not None:
            self.product_serial2 = product_serial2
        if product_serial3 is not None:
            self.product_serial3 = product_serial3
        if customer_asset_id is not None:
            self.customer_asset_id = customer_asset_id
        if category is not None:
            self.category = category
        if sub_category is not None:
            self.sub_category = sub_category
        if unit_price is not None:
            self.unit_price = unit_price
        if quantity is not None:
            self.quantity = quantity
        if total_amount is not None:
            self.total_amount = total_amount
        if tax_amount is not None:
            self.tax_amount = tax_amount
        if promo_code is not None:
            self.promo_code = promo_code
        if freight_amount is not None:
            self.freight_amount = freight_amount
        if unit_of_measure is not None:
            self.unit_of_measure = unit_of_measure
        if sale_code is not None:
            self.sale_code = sale_code
        if custom_format_id is not None:
            self.custom_format_id = custom_format_id
        if custom1 is not None:
            self.custom1 = custom1
        if custom2 is not None:
            self.custom2 = custom2
        if custom3 is not None:
            self.custom3 = custom3
        if custom4 is not None:
            self.custom4 = custom4
        if custom5 is not None:
            self.custom5 = custom5
        if custom6 is not None:
            self.custom6 = custom6
        if custom7 is not None:
            self.custom7 = custom7
        if custom8 is not None:
            self.custom8 = custom8
        if custom9 is not None:
            self.custom9 = custom9
        if pay_alloc is not None:
            self.pay_alloc = pay_alloc
        if alloc_code is not None:
            self.alloc_code = alloc_code
        if eid_indicator is not None:
            self.eid_indicator = eid_indicator
        if orig_unit_price is not None:
            self.orig_unit_price = orig_unit_price
        if orig_total_amount is not None:
            self.orig_total_amount = orig_total_amount
        if eid_detail is not None:
            self.eid_detail = eid_detail
        if tax_detail is not None:
            self.tax_detail = tax_detail
        if id is not None:
            self.id = id
        if tag is not None:
            self.tag = tag

    @property
    def discount_amount(self):
        """Gets the discount_amount of this Item.  # noqa: E501


        :return: The discount_amount of this Item.  # noqa: E501
        :rtype: str
        """
        return self._discount_amount

    @discount_amount.setter
    def discount_amount(self, discount_amount):
        """Sets the discount_amount of this Item.


        :param discount_amount: The discount_amount of this Item.  # noqa: E501
        :type: str
        """

        self._discount_amount = discount_amount

    @property
    def discount_flag(self):
        """Gets the discount_flag of this Item.  # noqa: E501


        :return: The discount_flag of this Item.  # noqa: E501
        :rtype: str
        """
        return self._discount_flag

    @discount_flag.setter
    def discount_flag(self, discount_flag):
        """Sets the discount_flag of this Item.


        :param discount_flag: The discount_flag of this Item.  # noqa: E501
        :type: str
        """

        self._discount_flag = discount_flag

    @property
    def tax_included_flag(self):
        """Gets the tax_included_flag of this Item.  # noqa: E501


        :return: The tax_included_flag of this Item.  # noqa: E501
        :rtype: str
        """
        return self._tax_included_flag

    @tax_included_flag.setter
    def tax_included_flag(self, tax_included_flag):
        """Sets the tax_included_flag of this Item.


        :param tax_included_flag: The tax_included_flag of this Item.  # noqa: E501
        :type: str
        """

        self._tax_included_flag = tax_included_flag

    @property
    def product_code(self):
        """Gets the product_code of this Item.  # noqa: E501


        :return: The product_code of this Item.  # noqa: E501
        :rtype: str
        """
        return self._product_code

    @product_code.setter
    def product_code(self, product_code):
        """Sets the product_code of this Item.


        :param product_code: The product_code of this Item.  # noqa: E501
        :type: str
        """

        self._product_code = product_code

    @property
    def product_upc(self):
        """Gets the product_upc of this Item.  # noqa: E501


        :return: The product_upc of this Item.  # noqa: E501
        :rtype: str
        """
        return self._product_upc

    @product_upc.setter
    def product_upc(self, product_upc):
        """Sets the product_upc of this Item.


        :param product_upc: The product_upc of this Item.  # noqa: E501
        :type: str
        """

        self._product_upc = product_upc

    @property
    def product_sku(self):
        """Gets the product_sku of this Item.  # noqa: E501


        :return: The product_sku of this Item.  # noqa: E501
        :rtype: str
        """
        return self._product_sku

    @product_sku.setter
    def product_sku(self, product_sku):
        """Sets the product_sku of this Item.


        :param product_sku: The product_sku of this Item.  # noqa: E501
        :type: str
        """

        self._product_sku = product_sku

    @property
    def product_name(self):
        """Gets the product_name of this Item.  # noqa: E501


        :return: The product_name of this Item.  # noqa: E501
        :rtype: str
        """
        return self._product_name

    @product_name.setter
    def product_name(self, product_name):
        """Sets the product_name of this Item.


        :param product_name: The product_name of this Item.  # noqa: E501
        :type: str
        """

        self._product_name = product_name

    @property
    def product_description(self):
        """Gets the product_description of this Item.  # noqa: E501


        :return: The product_description of this Item.  # noqa: E501
        :rtype: str
        """
        return self._product_description

    @product_description.setter
    def product_description(self, product_description):
        """Sets the product_description of this Item.


        :param product_description: The product_description of this Item.  # noqa: E501
        :type: str
        """

        self._product_description = product_description

    @property
    def product_make(self):
        """Gets the product_make of this Item.  # noqa: E501


        :return: The product_make of this Item.  # noqa: E501
        :rtype: str
        """
        return self._product_make

    @product_make.setter
    def product_make(self, product_make):
        """Sets the product_make of this Item.


        :param product_make: The product_make of this Item.  # noqa: E501
        :type: str
        """

        self._product_make = product_make

    @property
    def product_model(self):
        """Gets the product_model of this Item.  # noqa: E501


        :return: The product_model of this Item.  # noqa: E501
        :rtype: str
        """
        return self._product_model

    @product_model.setter
    def product_model(self, product_model):
        """Sets the product_model of this Item.


        :param product_model: The product_model of this Item.  # noqa: E501
        :type: str
        """

        self._product_model = product_model

    @property
    def product_part_number(self):
        """Gets the product_part_number of this Item.  # noqa: E501


        :return: The product_part_number of this Item.  # noqa: E501
        :rtype: str
        """
        return self._product_part_number

    @product_part_number.setter
    def product_part_number(self, product_part_number):
        """Sets the product_part_number of this Item.


        :param product_part_number: The product_part_number of this Item.  # noqa: E501
        :type: str
        """

        self._product_part_number = product_part_number

    @property
    def commodity_code(self):
        """Gets the commodity_code of this Item.  # noqa: E501


        :return: The commodity_code of this Item.  # noqa: E501
        :rtype: str
        """
        return self._commodity_code

    @commodity_code.setter
    def commodity_code(self, commodity_code):
        """Sets the commodity_code of this Item.


        :param commodity_code: The commodity_code of this Item.  # noqa: E501
        :type: str
        """

        self._commodity_code = commodity_code

    @property
    def product_year(self):
        """Gets the product_year of this Item.  # noqa: E501


        :return: The product_year of this Item.  # noqa: E501
        :rtype: str
        """
        return self._product_year

    @product_year.setter
    def product_year(self, product_year):
        """Sets the product_year of this Item.


        :param product_year: The product_year of this Item.  # noqa: E501
        :type: str
        """

        self._product_year = product_year

    @property
    def product_serial1(self):
        """Gets the product_serial1 of this Item.  # noqa: E501


        :return: The product_serial1 of this Item.  # noqa: E501
        :rtype: str
        """
        return self._product_serial1

    @product_serial1.setter
    def product_serial1(self, product_serial1):
        """Sets the product_serial1 of this Item.


        :param product_serial1: The product_serial1 of this Item.  # noqa: E501
        :type: str
        """

        self._product_serial1 = product_serial1

    @property
    def product_serial2(self):
        """Gets the product_serial2 of this Item.  # noqa: E501


        :return: The product_serial2 of this Item.  # noqa: E501
        :rtype: str
        """
        return self._product_serial2

    @product_serial2.setter
    def product_serial2(self, product_serial2):
        """Sets the product_serial2 of this Item.


        :param product_serial2: The product_serial2 of this Item.  # noqa: E501
        :type: str
        """

        self._product_serial2 = product_serial2

    @property
    def product_serial3(self):
        """Gets the product_serial3 of this Item.  # noqa: E501


        :return: The product_serial3 of this Item.  # noqa: E501
        :rtype: str
        """
        return self._product_serial3

    @product_serial3.setter
    def product_serial3(self, product_serial3):
        """Sets the product_serial3 of this Item.


        :param product_serial3: The product_serial3 of this Item.  # noqa: E501
        :type: str
        """

        self._product_serial3 = product_serial3

    @property
    def customer_asset_id(self):
        """Gets the customer_asset_id of this Item.  # noqa: E501


        :return: The customer_asset_id of this Item.  # noqa: E501
        :rtype: str
        """
        return self._customer_asset_id

    @customer_asset_id.setter
    def customer_asset_id(self, customer_asset_id):
        """Sets the customer_asset_id of this Item.


        :param customer_asset_id: The customer_asset_id of this Item.  # noqa: E501
        :type: str
        """

        self._customer_asset_id = customer_asset_id

    @property
    def category(self):
        """Gets the category of this Item.  # noqa: E501


        :return: The category of this Item.  # noqa: E501
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this Item.


        :param category: The category of this Item.  # noqa: E501
        :type: str
        """

        self._category = category

    @property
    def sub_category(self):
        """Gets the sub_category of this Item.  # noqa: E501


        :return: The sub_category of this Item.  # noqa: E501
        :rtype: str
        """
        return self._sub_category

    @sub_category.setter
    def sub_category(self, sub_category):
        """Sets the sub_category of this Item.


        :param sub_category: The sub_category of this Item.  # noqa: E501
        :type: str
        """

        self._sub_category = sub_category

    @property
    def unit_price(self):
        """Gets the unit_price of this Item.  # noqa: E501


        :return: The unit_price of this Item.  # noqa: E501
        :rtype: str
        """
        return self._unit_price

    @unit_price.setter
    def unit_price(self, unit_price):
        """Sets the unit_price of this Item.


        :param unit_price: The unit_price of this Item.  # noqa: E501
        :type: str
        """

        self._unit_price = unit_price

    @property
    def quantity(self):
        """Gets the quantity of this Item.  # noqa: E501


        :return: The quantity of this Item.  # noqa: E501
        :rtype: str
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this Item.


        :param quantity: The quantity of this Item.  # noqa: E501
        :type: str
        """

        self._quantity = quantity

    @property
    def total_amount(self):
        """Gets the total_amount of this Item.  # noqa: E501


        :return: The total_amount of this Item.  # noqa: E501
        :rtype: str
        """
        return self._total_amount

    @total_amount.setter
    def total_amount(self, total_amount):
        """Sets the total_amount of this Item.


        :param total_amount: The total_amount of this Item.  # noqa: E501
        :type: str
        """

        self._total_amount = total_amount

    @property
    def tax_amount(self):
        """Gets the tax_amount of this Item.  # noqa: E501


        :return: The tax_amount of this Item.  # noqa: E501
        :rtype: str
        """
        return self._tax_amount

    @tax_amount.setter
    def tax_amount(self, tax_amount):
        """Sets the tax_amount of this Item.


        :param tax_amount: The tax_amount of this Item.  # noqa: E501
        :type: str
        """

        self._tax_amount = tax_amount

    @property
    def promo_code(self):
        """Gets the promo_code of this Item.  # noqa: E501


        :return: The promo_code of this Item.  # noqa: E501
        :rtype: str
        """
        return self._promo_code

    @promo_code.setter
    def promo_code(self, promo_code):
        """Sets the promo_code of this Item.


        :param promo_code: The promo_code of this Item.  # noqa: E501
        :type: str
        """

        self._promo_code = promo_code

    @property
    def freight_amount(self):
        """Gets the freight_amount of this Item.  # noqa: E501


        :return: The freight_amount of this Item.  # noqa: E501
        :rtype: str
        """
        return self._freight_amount

    @freight_amount.setter
    def freight_amount(self, freight_amount):
        """Sets the freight_amount of this Item.


        :param freight_amount: The freight_amount of this Item.  # noqa: E501
        :type: str
        """

        self._freight_amount = freight_amount

    @property
    def unit_of_measure(self):
        """Gets the unit_of_measure of this Item.  # noqa: E501


        :return: The unit_of_measure of this Item.  # noqa: E501
        :rtype: str
        """
        return self._unit_of_measure

    @unit_of_measure.setter
    def unit_of_measure(self, unit_of_measure):
        """Sets the unit_of_measure of this Item.


        :param unit_of_measure: The unit_of_measure of this Item.  # noqa: E501
        :type: str
        """

        self._unit_of_measure = unit_of_measure

    @property
    def sale_code(self):
        """Gets the sale_code of this Item.  # noqa: E501


        :return: The sale_code of this Item.  # noqa: E501
        :rtype: str
        """
        return self._sale_code

    @sale_code.setter
    def sale_code(self, sale_code):
        """Sets the sale_code of this Item.


        :param sale_code: The sale_code of this Item.  # noqa: E501
        :type: str
        """

        self._sale_code = sale_code

    @property
    def custom_format_id(self):
        """Gets the custom_format_id of this Item.  # noqa: E501


        :return: The custom_format_id of this Item.  # noqa: E501
        :rtype: str
        """
        return self._custom_format_id

    @custom_format_id.setter
    def custom_format_id(self, custom_format_id):
        """Sets the custom_format_id of this Item.


        :param custom_format_id: The custom_format_id of this Item.  # noqa: E501
        :type: str
        """

        self._custom_format_id = custom_format_id

    @property
    def custom1(self):
        """Gets the custom1 of this Item.  # noqa: E501


        :return: The custom1 of this Item.  # noqa: E501
        :rtype: str
        """
        return self._custom1

    @custom1.setter
    def custom1(self, custom1):
        """Sets the custom1 of this Item.


        :param custom1: The custom1 of this Item.  # noqa: E501
        :type: str
        """

        self._custom1 = custom1

    @property
    def custom2(self):
        """Gets the custom2 of this Item.  # noqa: E501


        :return: The custom2 of this Item.  # noqa: E501
        :rtype: str
        """
        return self._custom2

    @custom2.setter
    def custom2(self, custom2):
        """Sets the custom2 of this Item.


        :param custom2: The custom2 of this Item.  # noqa: E501
        :type: str
        """

        self._custom2 = custom2

    @property
    def custom3(self):
        """Gets the custom3 of this Item.  # noqa: E501


        :return: The custom3 of this Item.  # noqa: E501
        :rtype: str
        """
        return self._custom3

    @custom3.setter
    def custom3(self, custom3):
        """Sets the custom3 of this Item.


        :param custom3: The custom3 of this Item.  # noqa: E501
        :type: str
        """

        self._custom3 = custom3

    @property
    def custom4(self):
        """Gets the custom4 of this Item.  # noqa: E501


        :return: The custom4 of this Item.  # noqa: E501
        :rtype: str
        """
        return self._custom4

    @custom4.setter
    def custom4(self, custom4):
        """Sets the custom4 of this Item.


        :param custom4: The custom4 of this Item.  # noqa: E501
        :type: str
        """

        self._custom4 = custom4

    @property
    def custom5(self):
        """Gets the custom5 of this Item.  # noqa: E501


        :return: The custom5 of this Item.  # noqa: E501
        :rtype: str
        """
        return self._custom5

    @custom5.setter
    def custom5(self, custom5):
        """Sets the custom5 of this Item.


        :param custom5: The custom5 of this Item.  # noqa: E501
        :type: str
        """

        self._custom5 = custom5

    @property
    def custom6(self):
        """Gets the custom6 of this Item.  # noqa: E501


        :return: The custom6 of this Item.  # noqa: E501
        :rtype: str
        """
        return self._custom6

    @custom6.setter
    def custom6(self, custom6):
        """Sets the custom6 of this Item.


        :param custom6: The custom6 of this Item.  # noqa: E501
        :type: str
        """

        self._custom6 = custom6

    @property
    def custom7(self):
        """Gets the custom7 of this Item.  # noqa: E501


        :return: The custom7 of this Item.  # noqa: E501
        :rtype: str
        """
        return self._custom7

    @custom7.setter
    def custom7(self, custom7):
        """Sets the custom7 of this Item.


        :param custom7: The custom7 of this Item.  # noqa: E501
        :type: str
        """

        self._custom7 = custom7

    @property
    def custom8(self):
        """Gets the custom8 of this Item.  # noqa: E501


        :return: The custom8 of this Item.  # noqa: E501
        :rtype: str
        """
        return self._custom8

    @custom8.setter
    def custom8(self, custom8):
        """Sets the custom8 of this Item.


        :param custom8: The custom8 of this Item.  # noqa: E501
        :type: str
        """

        self._custom8 = custom8

    @property
    def custom9(self):
        """Gets the custom9 of this Item.  # noqa: E501


        :return: The custom9 of this Item.  # noqa: E501
        :rtype: str
        """
        return self._custom9

    @custom9.setter
    def custom9(self, custom9):
        """Sets the custom9 of this Item.


        :param custom9: The custom9 of this Item.  # noqa: E501
        :type: str
        """

        self._custom9 = custom9

    @property
    def pay_alloc(self):
        """Gets the pay_alloc of this Item.  # noqa: E501


        :return: The pay_alloc of this Item.  # noqa: E501
        :rtype: str
        """
        return self._pay_alloc

    @pay_alloc.setter
    def pay_alloc(self, pay_alloc):
        """Sets the pay_alloc of this Item.


        :param pay_alloc: The pay_alloc of this Item.  # noqa: E501
        :type: str
        """

        self._pay_alloc = pay_alloc

    @property
    def alloc_code(self):
        """Gets the alloc_code of this Item.  # noqa: E501


        :return: The alloc_code of this Item.  # noqa: E501
        :rtype: str
        """
        return self._alloc_code

    @alloc_code.setter
    def alloc_code(self, alloc_code):
        """Sets the alloc_code of this Item.


        :param alloc_code: The alloc_code of this Item.  # noqa: E501
        :type: str
        """

        self._alloc_code = alloc_code

    @property
    def eid_indicator(self):
        """Gets the eid_indicator of this Item.  # noqa: E501


        :return: The eid_indicator of this Item.  # noqa: E501
        :rtype: str
        """
        return self._eid_indicator

    @eid_indicator.setter
    def eid_indicator(self, eid_indicator):
        """Sets the eid_indicator of this Item.


        :param eid_indicator: The eid_indicator of this Item.  # noqa: E501
        :type: str
        """

        self._eid_indicator = eid_indicator

    @property
    def orig_unit_price(self):
        """Gets the orig_unit_price of this Item.  # noqa: E501


        :return: The orig_unit_price of this Item.  # noqa: E501
        :rtype: str
        """
        return self._orig_unit_price

    @orig_unit_price.setter
    def orig_unit_price(self, orig_unit_price):
        """Sets the orig_unit_price of this Item.


        :param orig_unit_price: The orig_unit_price of this Item.  # noqa: E501
        :type: str
        """

        self._orig_unit_price = orig_unit_price

    @property
    def orig_total_amount(self):
        """Gets the orig_total_amount of this Item.  # noqa: E501


        :return: The orig_total_amount of this Item.  # noqa: E501
        :rtype: str
        """
        return self._orig_total_amount

    @orig_total_amount.setter
    def orig_total_amount(self, orig_total_amount):
        """Sets the orig_total_amount of this Item.


        :param orig_total_amount: The orig_total_amount of this Item.  # noqa: E501
        :type: str
        """

        self._orig_total_amount = orig_total_amount

    @property
    def eid_detail(self):
        """Gets the eid_detail of this Item.  # noqa: E501


        :return: The eid_detail of this Item.  # noqa: E501
        :rtype: list[EIDDetail]
        """
        return self._eid_detail

    @eid_detail.setter
    def eid_detail(self, eid_detail):
        """Sets the eid_detail of this Item.


        :param eid_detail: The eid_detail of this Item.  # noqa: E501
        :type: list[EIDDetail]
        """

        self._eid_detail = eid_detail

    @property
    def tax_detail(self):
        """Gets the tax_detail of this Item.  # noqa: E501


        :return: The tax_detail of this Item.  # noqa: E501
        :rtype: list[TaxDetailItem]
        """
        return self._tax_detail

    @tax_detail.setter
    def tax_detail(self, tax_detail):
        """Sets the tax_detail of this Item.


        :param tax_detail: The tax_detail of this Item.  # noqa: E501
        :type: list[TaxDetailItem]
        """

        self._tax_detail = tax_detail

    @property
    def id(self):
        """Gets the id of this Item.  # noqa: E501


        :return: The id of this Item.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Item.


        :param id: The id of this Item.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def tag(self):
        """Gets the tag of this Item.  # noqa: E501


        :return: The tag of this Item.  # noqa: E501
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this Item.


        :param tag: The tag of this Item.  # noqa: E501
        :type: str
        """

        self._tag = tag

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Item, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Item):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, Item):
            return True

        return self.to_dict() != other.to_dict()
