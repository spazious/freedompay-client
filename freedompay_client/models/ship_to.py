# coding: utf-8

"""
    Hosted Payment Controls API Documentation v1.5

    The API for Hosted Payment Controls. To access the swagger.json file open the following link: https://hpc.uat.freedompay.com/api/swagger/docs/v1.5

    The version of the OpenAPI document: v1.5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictStr

class ShipTo(BaseModel):
    """
    ShipTo
    """
    company: Optional[StrictStr] = None
    title: Optional[StrictStr] = None
    first_name: Optional[StrictStr] = Field(None, alias="firstName")
    middle_name: Optional[StrictStr] = Field(None, alias="middleName")
    last_name: Optional[StrictStr] = Field(None, alias="lastName")
    suffix: Optional[StrictStr] = None
    street1: Optional[StrictStr] = None
    street2: Optional[StrictStr] = None
    street3: Optional[StrictStr] = None
    street4: Optional[StrictStr] = None
    city: Optional[StrictStr] = None
    state: Optional[StrictStr] = None
    postal_code: Optional[StrictStr] = Field(None, alias="postalCode")
    country: Optional[StrictStr] = None
    phone_number: Optional[StrictStr] = Field(None, alias="phoneNumber")
    fax_number: Optional[StrictStr] = Field(None, alias="faxNumber")
    email: Optional[StrictStr] = None
    ssn: Optional[StrictStr] = None
    date_of_birth: Optional[StrictStr] = Field(None, alias="dateOfBirth")
    shipping_company: Optional[StrictStr] = Field(None, alias="shippingCompany")
    shipping_method: Optional[StrictStr] = Field(None, alias="shippingMethod")
    tracking_number: Optional[StrictStr] = Field(None, alias="trackingNumber")
    __properties = ["company", "title", "firstName", "middleName", "lastName", "suffix", "street1", "street2", "street3", "street4", "city", "state", "postalCode", "country", "phoneNumber", "faxNumber", "email", "ssn", "dateOfBirth", "shippingCompany", "shippingMethod", "trackingNumber"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> ShipTo:
        """Create an instance of ShipTo from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> ShipTo:
        """Create an instance of ShipTo from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return ShipTo.parse_obj(obj)

        _obj = ShipTo.parse_obj({
            "company": obj.get("company"),
            "title": obj.get("title"),
            "first_name": obj.get("firstName"),
            "middle_name": obj.get("middleName"),
            "last_name": obj.get("lastName"),
            "suffix": obj.get("suffix"),
            "street1": obj.get("street1"),
            "street2": obj.get("street2"),
            "street3": obj.get("street3"),
            "street4": obj.get("street4"),
            "city": obj.get("city"),
            "state": obj.get("state"),
            "postal_code": obj.get("postalCode"),
            "country": obj.get("country"),
            "phone_number": obj.get("phoneNumber"),
            "fax_number": obj.get("faxNumber"),
            "email": obj.get("email"),
            "ssn": obj.get("ssn"),
            "date_of_birth": obj.get("dateOfBirth"),
            "shipping_company": obj.get("shippingCompany"),
            "shipping_method": obj.get("shippingMethod"),
            "tracking_number": obj.get("trackingNumber")
        })
        return _obj


