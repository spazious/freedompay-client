# coding: utf-8

"""
    Hosted Payment Controls API Documentation v1.5

    The API for Hosted Payment Controls. To access the swagger.json file open the following link: https://hpc.uat.freedompay.com/api/swagger/docs/v1.5

    The version of the OpenAPI document: v1.5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictStr

class FleetData(BaseModel):
    """
    FleetData
    """
    user_id: Optional[StrictStr] = Field(None, alias="userId")
    vehicle_id: Optional[StrictStr] = Field(None, alias="vehicleId")
    vehicle_tag: Optional[StrictStr] = Field(None, alias="vehicleTag")
    driver_id: Optional[StrictStr] = Field(None, alias="driverId")
    odo: Optional[StrictStr] = None
    dl_num: Optional[StrictStr] = Field(None, alias="dlNum")
    dl_state: Optional[StrictStr] = Field(None, alias="dlState")
    dl_name: Optional[StrictStr] = Field(None, alias="dlName")
    po_number: Optional[StrictStr] = Field(None, alias="poNumber")
    invoice_num: Optional[StrictStr] = Field(None, alias="invoiceNum")
    trip_num: Optional[StrictStr] = Field(None, alias="tripNum")
    unit_num: Optional[StrictStr] = Field(None, alias="unitNum")
    trailer_hours: Optional[StrictStr] = Field(None, alias="trailerHours")
    dob: Optional[StrictStr] = None
    zip: Optional[StrictStr] = None
    misc1: Optional[StrictStr] = None
    misc2: Optional[StrictStr] = None
    cash_back: Optional[StrictStr] = Field(None, alias="cashBack")
    job_num: Optional[StrictStr] = Field(None, alias="jobNum")
    maint_id: Optional[StrictStr] = Field(None, alias="maintId")
    dept: Optional[StrictStr] = None
    vin: Optional[StrictStr] = None
    tractor_num: Optional[StrictStr] = Field(None, alias="tractorNum")
    hubo: Optional[StrictStr] = None
    trailer_num: Optional[StrictStr] = Field(None, alias="trailerNum")
    custom1: Optional[StrictStr] = None
    custom2: Optional[StrictStr] = None
    __properties = ["userId", "vehicleId", "vehicleTag", "driverId", "odo", "dlNum", "dlState", "dlName", "poNumber", "invoiceNum", "tripNum", "unitNum", "trailerHours", "dob", "zip", "misc1", "misc2", "cashBack", "jobNum", "maintId", "dept", "vin", "tractorNum", "hubo", "trailerNum", "custom1", "custom2"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> FleetData:
        """Create an instance of FleetData from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> FleetData:
        """Create an instance of FleetData from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return FleetData.parse_obj(obj)

        _obj = FleetData.parse_obj({
            "user_id": obj.get("userId"),
            "vehicle_id": obj.get("vehicleId"),
            "vehicle_tag": obj.get("vehicleTag"),
            "driver_id": obj.get("driverId"),
            "odo": obj.get("odo"),
            "dl_num": obj.get("dlNum"),
            "dl_state": obj.get("dlState"),
            "dl_name": obj.get("dlName"),
            "po_number": obj.get("poNumber"),
            "invoice_num": obj.get("invoiceNum"),
            "trip_num": obj.get("tripNum"),
            "unit_num": obj.get("unitNum"),
            "trailer_hours": obj.get("trailerHours"),
            "dob": obj.get("dob"),
            "zip": obj.get("zip"),
            "misc1": obj.get("misc1"),
            "misc2": obj.get("misc2"),
            "cash_back": obj.get("cashBack"),
            "job_num": obj.get("jobNum"),
            "maint_id": obj.get("maintId"),
            "dept": obj.get("dept"),
            "vin": obj.get("vin"),
            "tractor_num": obj.get("tractorNum"),
            "hubo": obj.get("hubo"),
            "trailer_num": obj.get("trailerNum"),
            "custom1": obj.get("custom1"),
            "custom2": obj.get("custom2")
        })
        return _obj


