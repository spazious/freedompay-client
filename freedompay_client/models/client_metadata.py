# coding: utf-8

"""
    Hosted Payment Controls API Documentation v1.5

    The API for Hosted Payment Controls. To access the swagger.json file open the following link: https://hpc.uat.freedompay.com/api/swagger/docs/v1.5  # noqa: E501

    OpenAPI spec version: v1.5
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from freedompay_client.configuration import Configuration


class ClientMetadata(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'application_name': 'str',
        'application_version': 'str',
        'workstation_id': 'str',
        'application_user': 'str',
        'environment': 'str',
        'library': 'str',
        'library_version': 'str',
        'security_library': 'str',
        'security_library_version': 'str',
        'test_run': 'str',
        'test_case': 'str',
        'poi_device_identifier': 'str',
        'selling_system_name': 'str',
        'selling_system_version': 'str',
        'selling_middleware_name': 'str',
        'selling_middleware_version': 'str'
    }

    attribute_map = {
        'application_name': 'applicationName',
        'application_version': 'applicationVersion',
        'workstation_id': 'workstationId',
        'application_user': 'applicationUser',
        'environment': 'environment',
        'library': 'library',
        'library_version': 'libraryVersion',
        'security_library': 'securityLibrary',
        'security_library_version': 'securityLibraryVersion',
        'test_run': 'testRun',
        'test_case': 'testCase',
        'poi_device_identifier': 'poiDeviceIdentifier',
        'selling_system_name': 'sellingSystemName',
        'selling_system_version': 'sellingSystemVersion',
        'selling_middleware_name': 'sellingMiddlewareName',
        'selling_middleware_version': 'sellingMiddlewareVersion'
    }

    def __init__(self, application_name=None, application_version=None, workstation_id=None, application_user=None, environment=None, library=None, library_version=None, security_library=None, security_library_version=None, test_run=None, test_case=None, poi_device_identifier=None, selling_system_name=None, selling_system_version=None, selling_middleware_name=None, selling_middleware_version=None, _configuration=None):  # noqa: E501
        """ClientMetadata - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._application_name = None
        self._application_version = None
        self._workstation_id = None
        self._application_user = None
        self._environment = None
        self._library = None
        self._library_version = None
        self._security_library = None
        self._security_library_version = None
        self._test_run = None
        self._test_case = None
        self._poi_device_identifier = None
        self._selling_system_name = None
        self._selling_system_version = None
        self._selling_middleware_name = None
        self._selling_middleware_version = None
        self.discriminator = None

        if application_name is not None:
            self.application_name = application_name
        if application_version is not None:
            self.application_version = application_version
        if workstation_id is not None:
            self.workstation_id = workstation_id
        if application_user is not None:
            self.application_user = application_user
        if environment is not None:
            self.environment = environment
        if library is not None:
            self.library = library
        if library_version is not None:
            self.library_version = library_version
        if security_library is not None:
            self.security_library = security_library
        if security_library_version is not None:
            self.security_library_version = security_library_version
        if test_run is not None:
            self.test_run = test_run
        if test_case is not None:
            self.test_case = test_case
        if poi_device_identifier is not None:
            self.poi_device_identifier = poi_device_identifier
        if selling_system_name is not None:
            self.selling_system_name = selling_system_name
        if selling_system_version is not None:
            self.selling_system_version = selling_system_version
        if selling_middleware_name is not None:
            self.selling_middleware_name = selling_middleware_name
        if selling_middleware_version is not None:
            self.selling_middleware_version = selling_middleware_version

    @property
    def application_name(self):
        """Gets the application_name of this ClientMetadata.  # noqa: E501


        :return: The application_name of this ClientMetadata.  # noqa: E501
        :rtype: str
        """
        return self._application_name

    @application_name.setter
    def application_name(self, application_name):
        """Sets the application_name of this ClientMetadata.


        :param application_name: The application_name of this ClientMetadata.  # noqa: E501
        :type: str
        """

        self._application_name = application_name

    @property
    def application_version(self):
        """Gets the application_version of this ClientMetadata.  # noqa: E501


        :return: The application_version of this ClientMetadata.  # noqa: E501
        :rtype: str
        """
        return self._application_version

    @application_version.setter
    def application_version(self, application_version):
        """Sets the application_version of this ClientMetadata.


        :param application_version: The application_version of this ClientMetadata.  # noqa: E501
        :type: str
        """

        self._application_version = application_version

    @property
    def workstation_id(self):
        """Gets the workstation_id of this ClientMetadata.  # noqa: E501


        :return: The workstation_id of this ClientMetadata.  # noqa: E501
        :rtype: str
        """
        return self._workstation_id

    @workstation_id.setter
    def workstation_id(self, workstation_id):
        """Sets the workstation_id of this ClientMetadata.


        :param workstation_id: The workstation_id of this ClientMetadata.  # noqa: E501
        :type: str
        """

        self._workstation_id = workstation_id

    @property
    def application_user(self):
        """Gets the application_user of this ClientMetadata.  # noqa: E501


        :return: The application_user of this ClientMetadata.  # noqa: E501
        :rtype: str
        """
        return self._application_user

    @application_user.setter
    def application_user(self, application_user):
        """Sets the application_user of this ClientMetadata.


        :param application_user: The application_user of this ClientMetadata.  # noqa: E501
        :type: str
        """

        self._application_user = application_user

    @property
    def environment(self):
        """Gets the environment of this ClientMetadata.  # noqa: E501


        :return: The environment of this ClientMetadata.  # noqa: E501
        :rtype: str
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """Sets the environment of this ClientMetadata.


        :param environment: The environment of this ClientMetadata.  # noqa: E501
        :type: str
        """

        self._environment = environment

    @property
    def library(self):
        """Gets the library of this ClientMetadata.  # noqa: E501


        :return: The library of this ClientMetadata.  # noqa: E501
        :rtype: str
        """
        return self._library

    @library.setter
    def library(self, library):
        """Sets the library of this ClientMetadata.


        :param library: The library of this ClientMetadata.  # noqa: E501
        :type: str
        """

        self._library = library

    @property
    def library_version(self):
        """Gets the library_version of this ClientMetadata.  # noqa: E501


        :return: The library_version of this ClientMetadata.  # noqa: E501
        :rtype: str
        """
        return self._library_version

    @library_version.setter
    def library_version(self, library_version):
        """Sets the library_version of this ClientMetadata.


        :param library_version: The library_version of this ClientMetadata.  # noqa: E501
        :type: str
        """

        self._library_version = library_version

    @property
    def security_library(self):
        """Gets the security_library of this ClientMetadata.  # noqa: E501


        :return: The security_library of this ClientMetadata.  # noqa: E501
        :rtype: str
        """
        return self._security_library

    @security_library.setter
    def security_library(self, security_library):
        """Sets the security_library of this ClientMetadata.


        :param security_library: The security_library of this ClientMetadata.  # noqa: E501
        :type: str
        """

        self._security_library = security_library

    @property
    def security_library_version(self):
        """Gets the security_library_version of this ClientMetadata.  # noqa: E501


        :return: The security_library_version of this ClientMetadata.  # noqa: E501
        :rtype: str
        """
        return self._security_library_version

    @security_library_version.setter
    def security_library_version(self, security_library_version):
        """Sets the security_library_version of this ClientMetadata.


        :param security_library_version: The security_library_version of this ClientMetadata.  # noqa: E501
        :type: str
        """

        self._security_library_version = security_library_version

    @property
    def test_run(self):
        """Gets the test_run of this ClientMetadata.  # noqa: E501


        :return: The test_run of this ClientMetadata.  # noqa: E501
        :rtype: str
        """
        return self._test_run

    @test_run.setter
    def test_run(self, test_run):
        """Sets the test_run of this ClientMetadata.


        :param test_run: The test_run of this ClientMetadata.  # noqa: E501
        :type: str
        """

        self._test_run = test_run

    @property
    def test_case(self):
        """Gets the test_case of this ClientMetadata.  # noqa: E501


        :return: The test_case of this ClientMetadata.  # noqa: E501
        :rtype: str
        """
        return self._test_case

    @test_case.setter
    def test_case(self, test_case):
        """Sets the test_case of this ClientMetadata.


        :param test_case: The test_case of this ClientMetadata.  # noqa: E501
        :type: str
        """

        self._test_case = test_case

    @property
    def poi_device_identifier(self):
        """Gets the poi_device_identifier of this ClientMetadata.  # noqa: E501


        :return: The poi_device_identifier of this ClientMetadata.  # noqa: E501
        :rtype: str
        """
        return self._poi_device_identifier

    @poi_device_identifier.setter
    def poi_device_identifier(self, poi_device_identifier):
        """Sets the poi_device_identifier of this ClientMetadata.


        :param poi_device_identifier: The poi_device_identifier of this ClientMetadata.  # noqa: E501
        :type: str
        """

        self._poi_device_identifier = poi_device_identifier

    @property
    def selling_system_name(self):
        """Gets the selling_system_name of this ClientMetadata.  # noqa: E501


        :return: The selling_system_name of this ClientMetadata.  # noqa: E501
        :rtype: str
        """
        return self._selling_system_name

    @selling_system_name.setter
    def selling_system_name(self, selling_system_name):
        """Sets the selling_system_name of this ClientMetadata.


        :param selling_system_name: The selling_system_name of this ClientMetadata.  # noqa: E501
        :type: str
        """

        self._selling_system_name = selling_system_name

    @property
    def selling_system_version(self):
        """Gets the selling_system_version of this ClientMetadata.  # noqa: E501


        :return: The selling_system_version of this ClientMetadata.  # noqa: E501
        :rtype: str
        """
        return self._selling_system_version

    @selling_system_version.setter
    def selling_system_version(self, selling_system_version):
        """Sets the selling_system_version of this ClientMetadata.


        :param selling_system_version: The selling_system_version of this ClientMetadata.  # noqa: E501
        :type: str
        """

        self._selling_system_version = selling_system_version

    @property
    def selling_middleware_name(self):
        """Gets the selling_middleware_name of this ClientMetadata.  # noqa: E501


        :return: The selling_middleware_name of this ClientMetadata.  # noqa: E501
        :rtype: str
        """
        return self._selling_middleware_name

    @selling_middleware_name.setter
    def selling_middleware_name(self, selling_middleware_name):
        """Sets the selling_middleware_name of this ClientMetadata.


        :param selling_middleware_name: The selling_middleware_name of this ClientMetadata.  # noqa: E501
        :type: str
        """

        self._selling_middleware_name = selling_middleware_name

    @property
    def selling_middleware_version(self):
        """Gets the selling_middleware_version of this ClientMetadata.  # noqa: E501


        :return: The selling_middleware_version of this ClientMetadata.  # noqa: E501
        :rtype: str
        """
        return self._selling_middleware_version

    @selling_middleware_version.setter
    def selling_middleware_version(self, selling_middleware_version):
        """Sets the selling_middleware_version of this ClientMetadata.


        :param selling_middleware_version: The selling_middleware_version of this ClientMetadata.  # noqa: E501
        :type: str
        """

        self._selling_middleware_version = selling_middleware_version

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ClientMetadata, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ClientMetadata):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ClientMetadata):
            return True

        return self.to_dict() != other.to_dict()
